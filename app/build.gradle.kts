/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.gradle.internal.os.OperatingSystem


plugins {
    // Apply the scala Plugin to add support for Scala.
    scala

    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("com.glovoapp.semantic-versioning") version  "1.1.8"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

version = project.version

tasks.jar {
    manifest {
        attributes(mapOf(
                "Implementation-Title" to project.name,
                "Implementation-Version" to project.version,
                "Main-Class" to "App")
        )
    }
    project.setProperty("archivesBaseName", "towerdefense")
}

tasks {
    named<ShadowJar>("shadowJar") {
        if (OperatingSystem.current().isWindows) {
            archiveBaseName.set("towerdefense-windows")
        } else if(OperatingSystem.current().isLinux) {
            archiveBaseName.set("towerdefense-unix")
        } else if(OperatingSystem.current().isMacOsX) {
            archiveBaseName.set("towerdefense-mac")
        } else {
            archiveBaseName.set("towerdefense-other")
        }
        manifest {
            attributes(mapOf("Main-Class" to "View.GameLauncher"))
        }
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation("org.scala-lang:scala-library:2.13.6")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")

    // Use Scalatest for testing our library
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.scalatest:scalatest_2.13:3.2.9")
    testImplementation("org.scalatestplus:junit-4-13_2.13:3.2.2.0")

    // Need scala-xml at test runtime
    testRuntimeOnly("org.scala-lang.modules:scala-xml_2.13:1.2.0")
}


task("printVersion") {
    doLast {
        println("The project current version is ${project.semanticVersion.version.get()}")
    }
}


application {
    // Define the main class for the application.
    mainClass.set("ScalaDemoCi.App")
}
